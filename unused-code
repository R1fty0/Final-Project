class WeaponState(Enum):
    """ Manages how durable a specific weapon is and how effective it is in battle. """
    BRAND_NEW = False  # 100% damage
    BATTLE_SCARED = False  # 80% damage
    WORN_OUT = False  # 50% damage
    BROKEN = False  # 0% damage


class Weapon:
    def __init__(self, name, damage, state=WeaponState.BRAND_NEW):
        self.name = name
        self.damage = damage
        self.state = state

    def set_state(self, new_state):
        """ Sets the state of the weapon. """
        self.state = new_state

    def get_state(self):
        """ Gets the current state of the weapon. """
        return self.state.value


class Shield:
    def __init__(self, health):
        self.health = health

    def block_damage(self, damage):
        self.health -= damage

    def is_broken(self) -> bool:
        """ Checks whether the shield is broken/has taken too much damage. """
        if self.health == 0:
            print("Shield broken!")
            return True
        else:
            return False


class Item:
    def __init__(self, name, health, activation_key):
        self.name = name
        self.health = health
        self.activation_key = activation_key

    def use(self, cost):
        self.health -= cost